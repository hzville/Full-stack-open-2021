{"version":3,"sources":["services/persons.js","components/Button.js","components/Person.js","components/SuccessfulMessage.js","components/ErrorMessage.js","App.js","index.js"],"names":["baseUrl","personObj","axios","post","then","response","data","id","delete","get","person","newNumber","put","number","Button","text","buttonFunction","onClick","value","Person","button","name","SuccessfulMessage","message","className","ErrorMessage","App","useState","persons","setPersons","newName","setNewName","setNewNumber","newFilter","setNewFilter","successfulMessage","setSuccessfulMessage","errorMessage","setErrorMessage","useEffect","personsHandleService","deletePerson","event","target","repsonse","window","confirm","resp","updateAllPersons","setTimeout","catch","error","filter_result","filter","toLowerCase","includes","onChange","onSubmit","preventDefault","map","person_to_update","length","console","log","concat","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba7896f6.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst addPerson = personObj => {\n    const request = axios.post(baseUrl, personObj)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst getAllPersons = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst getSinglePerson = (id) => {\n    const request = axios.get(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst updateNumber = (person, newNumber) => {\n    const request = axios.put(`${baseUrl}/${person.id}`,{...person, number: newNumber})\n    return request.then(response => response.data)\n}\n\n\nexport default{\n    addPerson,\n    deletePerson,\n    getAllPersons,\n    getSinglePerson,\n    updateNumber\n}","import React from \"react\";\n\nconst Button = ({person, text, buttonFunction}) => {\n    return <button onClick={buttonFunction} value={person.id}>{text}</button>\n  }\n\nexport default Button","import React from \"react\";\n\nconst Person = ({person, button}) => {\n    return(\n      <div>\n        {person.name} {person.number} {button}\n      </div>\n    )\n  }\n\nexport default Person","import React from \"react\";\n\nconst SuccessfulMessage = ({message}) => {\n    if (message === null){\n        return null\n    }\n\n    return(\n        <div className='successful'>\n            {message}\n        </div>\n    )\n}\n\nexport default SuccessfulMessage","import React from \"react\";\n\nconst ErrorMessage = ({message}) => {\n    if (message === null){\n        return null\n    }\n\n    return(\n        <div className='error'>\n            {message}\n        </div>\n    )\n}\n\nexport default ErrorMessage","import React, { useState, useEffect } from 'react'\nimport personsHandleService from './services/persons'\nimport Button from './components/Button'\nimport Person from './components/Person'\nimport SuccessfulMessage from './components/SuccessfulMessage'\nimport ErrorMessage from './components/ErrorMessage'\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [successfulMessage, setSuccessfulMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  \n  useEffect(() =>{\n    personsHandleService.getAllPersons().then(response => setPersons(response))\n  },[])\n\n  \n  const addName = (event) => {\n    event.preventDefault()\n    const list_of_names = persons.map(person => person.name.toLowerCase())\n    if(list_of_names.includes(newName.toLowerCase())){\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n        const person_to_update = persons.filter(person => person.name.toLowerCase().includes(newName.toLowerCase()))\n        if(person_to_update.length > 0) {\n          personsHandleService.updateNumber(person_to_update[0], newNumber).then(response =>{\n            updateAllPersons()\n            setSuccessfulMessage(`${newName} has been edited`)\n            setTimeout(() => setSuccessfulMessage(null), 5000)\n          }).catch(error => {\n            console.log(\"error was \", error)\n            setErrorMessage(`Information of ${newName} has already been removed from server`)\n            setTimeout(() =>setErrorMessage(null), 5000)\n          })\n        }\n        setNewName(\"\")\n        setNewNumber(\"\") \n      }\n\n    } else {\n      const personObj = {\n        name: newName,\n        number: newNumber\n      }\n\n      personsHandleService.addPerson(personObj).then(response => {\n        setPersons(persons.concat(response))\n        setSuccessfulMessage(`Added ${newName}`)\n        setTimeout(() => setSuccessfulMessage(null), 5000)\n      }).catch(error => {\n        setErrorMessage(`Failed to add ${newName}`)\n        console.log(error.response.data)\n        setTimeout(() =>setErrorMessage(null), 5000)\n      })\n      setNewName(\"\")\n      setNewNumber(\"\")\n    }\n  }\n\n  const handleNameChange = (event) =>{\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const deletePerson = (event) => {\n    const person_to_delete = personsHandleService.getSinglePerson(event.target.value)\n    person_to_delete.then(repsonse =>{ \n      if(window.confirm(`Delete ${repsonse.name} ?`)){\n        personsHandleService.deletePerson(event.target.value).then( resp =>{\n          updateAllPersons()\n          setSuccessfulMessage(`Delete successful`)\n          setTimeout(() => setSuccessfulMessage(null), 5000)\n        }).catch(error => {\n          setErrorMessage(`Data not found from server`)\n          setTimeout(() =>setErrorMessage(null), 5000)\n        })\n      }\n    })\n  }\n\n  const updateAllPersons = () => {\n    personsHandleService.getAllPersons().then(response =>{\n      setPersons(response)\n    })\n\n  }\n\n  const filter_result = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <SuccessfulMessage message={successfulMessage} />\n      <ErrorMessage message={errorMessage} />\n      <div>filter shown with <input value={newFilter} onChange={handleFilterChange}></input></div>\n      <h2>add a new</h2>\n      <form onSubmit={addName}>\n        <div> name: <input value={newName} onChange={handleNameChange}/> </div>\n        <div> number: <input value={newNumber} onChange={handleNumberChange}/> </div>\n        <div> <button type=\"submit\">add</button> </div>\n      </form>\n      <h2>Numbers</h2>\n      {filter_result.map(person => \n        <Person key={person.name} person={person} button={<Button person={person} text=\"delete\" buttonFunction={deletePerson}/>} />)}\n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}